{"ast":null,"code":"var _jsxFileName = \"/Users/abdallahadel/gizasystems/frontend/src/components/RegistrationPage.js\",\n  _s = $RefreshSig$();\n// RegistrationPage.js\n\nimport React, { useState } from 'react';\nimport { TextField, Button, Container, Typography, Grid, CssBaseline } from '@mui/material';\nimport '../style/RegistrationPage.css';\nimport { registrationForm } from '../services/registration';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [submitMsg, setSubmitMsg] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.displayName.trim()) {\n      newErrors.displayName = 'Display Name is required';\n    }\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Invalid email address';\n    }\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n    if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validateForm()) {\n      const success = await registrationForm(formData.email, formData.password, formData.displayName, setSubmitMsg);\n      if (success) {\n        setFormData({\n          displayName: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n        setErrors({});\n      } else {\n        console.log('Registration failed');\n      }\n    } else {\n      console.log('Form validation failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paper\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        noValidate: true,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"displayName\",\n              label: \"Display Name\",\n              name: \"displayName\",\n              value: formData.displayName,\n              onChange: handleChange,\n              error: !!errors.displayName,\n              helperText: errors.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleChange,\n              error: !!errors.email,\n              helperText: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              value: formData.password,\n              onChange: handleChange,\n              error: !!errors.password,\n              helperText: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"confirmPassword\",\n              label: \"Confirm Password\",\n              type: \"password\",\n              id: \"confirmPassword\",\n              value: formData.confirmPassword,\n              onChange: handleChange,\n              error: !!errors.confirmPassword,\n              helperText: errors.confirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"submitBtn\",\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), !!setSubmitMsg && /*#__PURE__*/_jsxDEV(Typography, {\n        children: submitMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationPage, \"zWrGbQwNnFZhhrVR0Rn+xxgH0D8=\");\n_c = RegistrationPage;\nexport default RegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["React","useState","TextField","Button","Container","Typography","Grid","CssBaseline","registrationForm","jsxDEV","_jsxDEV","RegistrationPage","_s","formData","setFormData","displayName","email","password","confirmPassword","errors","setErrors","submitMsg","setSubmitMsg","handleChange","e","name","value","target","validateForm","newErrors","trim","test","length","Object","keys","handleSubmit","preventDefault","success","console","log","component","maxWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","noValidate","container","spacing","item","xs","required","fullWidth","id","label","onChange","error","helperText","type","color","_c","$RefreshReg$"],"sources":["/Users/abdallahadel/gizasystems/frontend/src/components/RegistrationPage.js"],"sourcesContent":["// RegistrationPage.js\n\nimport React, { useState } from 'react';\nimport { TextField, Button, Container, Typography, Grid, CssBaseline } from '@mui/material';\nimport '../style/RegistrationPage.css';\nimport { registrationForm } from '../services/registration';\n\nconst RegistrationPage = () => {\n  const [formData, setFormData] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [errors, setErrors] = useState({});\n  const [submitMsg, setSubmitMsg] = useState('');\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n    \n\n\n  const validateForm =  () => {\n    const newErrors = {};\n\n    if (!formData.displayName.trim()) {\n      newErrors.displayName = 'Display Name is required';\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Invalid email address';\n    }\n\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n\n    if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      const success = await registrationForm(formData.email, formData.password, formData.displayName, setSubmitMsg);\n      if(success){\n        setFormData({\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n        });\n        setErrors({});\n      } else {\n        console.log('Registration failed');\n      }\n    } else {\n      console.log('Form validation failed');\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" className=\"container\">\n      <CssBaseline />\n      <div className=\"paper\">\n        <Typography variant=\"h5\">Registration</Typography>\n        <form onSubmit={handleSubmit} noValidate className=\"form\">\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"displayName\"\n                label=\"Display Name\"\n                name=\"displayName\"\n                value={formData.displayName}\n                onChange={handleChange}\n                error={!!errors.displayName}\n                helperText={errors.displayName}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                error={!!errors.email}\n                helperText={errors.email}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                error={!!errors.password}\n                helperText={errors.password}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                value={formData.confirmPassword}\n                onChange={handleChange}\n                error={!!errors.confirmPassword}\n                helperText={errors.confirmPassword}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            className=\"submitBtn\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Register\n          </Button>\n        </form>\n        {!!setSubmitMsg && <Typography>{submitMsg}</Typography>}\n      </div>\n    </Container>\n  );\n};\n\nexport default RegistrationPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}